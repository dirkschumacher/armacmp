% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim.R
\name{compile_optimization_problem}
\alias{compile_optimization_problem}
\title{Optimize arbitrary and differentiable functions}
\usage{
compile_optimization_problem(data = list(), evaluate, gradient,
  optimizer = optimizer_SA())
}
\arguments{
\item{data}{a named list of prior data you would like to supply to the evaluate function.}

\item{evaluate}{a function that is to be minimized. It should return a single numeric.}

\item{gradient}{optional, a function computing the gradient of \code{evaluate}}

\item{optimizer}{one of the many optimizers}
}
\description{
The function compiles the code to C++ and uses Armadillo and ensmallen to optimize it.
}
\examples{
optimize <- arma_optim(
  data = list(),
  evaluate = function(x) {
    return(2 * norm(x)^2)
  },
  optimizer = optimizer_SA()
)

# should be roughly c(0, 0, 0)
result <- optimize(matrix(c(1, -1, 1), ncol = 1))
}
